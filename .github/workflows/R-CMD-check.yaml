# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
name: R-CMD-check

on:
  push:
    branches: [main, master]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # ------------------------------
  # Quick unit tests (no R CMD check)
  # ------------------------------
  unit-tests:
    runs-on: ubuntu-latest
    name: unit-tests (ubuntu-latest, release)
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CI: true
    steps:
      - uses: actions/checkout@v4
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::devtools
          needs: tests
      - name: Run testthat tests
        run: Rscript -e 'devtools::test()'

  # ------------------------------
  # Full CRAN-like R CMD check
  # ------------------------------
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    needs: unit-tests
    name: ${{ matrix.config.os }} (R ${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: macos-latest,   r: 'release',  build_manual: false }
          - { os: windows-latest, r: 'release',  build_manual: false }
          - { os: windows-latest, r: 'oldrel-1', build_manual: false }
          - { os: windows-latest, r: 'oldrel-2', build_manual: false }
          - { os: windows-latest, r: 'oldrel-3', build_manual: false }
          - { os: windows-latest, r: 'oldrel-4', build_manual: false }
          - { os: ubuntu-latest,  r: 'devel',    http-user-agent: 'release', build_manual: false }
          - { os: ubuntu-latest,  r: 'release',  build_manual: true }    # only job that builds PDF manual

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      CI: true
      _R_CHECK_FORCE_SUGGESTS_: false
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RGL_USE_NULL: true

    steps:
      - uses: actions/checkout@v4
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      # System packages for Linux (qpdf/ghostscript for compact vignettes)
      - name: Install system libraries (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y qpdf ghostscript

      # TinyTeX only when we build the PDF manual
      - if: matrix.config.build_manual == true
        uses: r-lib/actions/setup-tinytex@v2
      - if: matrix.config.build_manual == true
        run: tlmgr install ae inconsolata listings

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      # ---- Run checks ----
      # Non-manual jobs (skip PDF manual, compact vignettes)
      - name: Check package (no manual)
        if: matrix.config.build_manual == false
        uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          args: 'c("--as-cran","--no-manual")'
          build_args: 'c("--compact-vignettes=gs+qpdf")'

      # Manual job (Ubuntu release) â€“ build the PDF manual
      - name: Check package (with manual)
        if: matrix.config.build_manual == true
        uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          args: 'c("--as-cran")'